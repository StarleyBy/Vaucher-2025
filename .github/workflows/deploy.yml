name: Deploy Google Apps Script

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Clasp
      run: npm install -g @google/clasp@2.4.1
      
    - name: Authenticate Clasp
      env:
        CLASP_AUTH_TOKEN: ${{ secrets.CLASP_AUTH_TOKEN }}
      run: |
        echo "=== Decoding original token ==="
        echo $CLASP_AUTH_TOKEN | base64 -d > /tmp/original_token.json
        cat /tmp/original_token.json
        
        echo "=== Converting to clasp format ==="
        cat > /tmp/convert_token.py << 'PYTHON_SCRIPT'
        import json
        
        # Читаем оригинальный токен
        with open('/tmp/original_token.json', 'r') as f:
            original = json.load(f)
        
        # Извлекаем данные из структуры tokens.default
        default_token = original['tokens']['default']
        
        # Создаем структуру для clasp
        clasp_format = {
            "token": {
                "access_token": default_token['access_token'],
                "refresh_token": default_token['refresh_token'],
                "scope": "https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/script.deployments",
                "token_type": "Bearer"
            },
            "oauth2ClientSettings": {
                "clientId": default_token['client_id'],
                "clientSecret": default_token['client_secret'],
                "redirectUri": "http://localhost"
            },
            "isLocalCreds": False
        }
        
        # Сохраняем в формате clasp
        with open('/home/runner/.clasprc.json', 'w') as f:
            json.dump(clasp_format, f, indent=2)
        
        print("✅ Token converted successfully")
        PYTHON_SCRIPT
        
        python3 /tmp/convert_token.py
        chmod 600 ~/.clasprc.json
        
        echo "=== Converted token structure ==="
        cat ~/.clasprc.json
        
    - name: Check .clasp.json exists
      working-directory: ./backend
      run: |
        echo "=== Backend directory contents ==="
        ls -la
        echo "=== .clasp.json content ==="
        if [ -f .clasp.json ]; then
          cat .clasp.json
        else
          echo "❌ .clasp.json file missing!"
          exit 1
        fi
        
    - name: Push to Google Apps Script
      run: clasp push --force
      working-directory: ./backend